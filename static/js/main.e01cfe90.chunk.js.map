{"version":3,"sources":["Square.js","Board.js","Player.js","Game.js","index.js"],"names":["Square","props","className","customStyle","data-testid","testId","onClick","defaultProps","BOARD_A_CHAR_CODE","charCodeAt","MARKER_TYPE_EMPTY","MARKER_TYPE_SHIP","ROW_RANGE","Array","from","BOARD_SIZE","keys","splice","COLUMN_RANGE","map","elem","String","fromCharCode","Board","useState","grid","Map","forEach","row","col","set","initGrid","setGrid","clickedAdjSquares","setClickedAdjSquares","hasShipPlaced","setHasShipPlaced","hasShipSunk","setHasShipSunk","invalidClick","setInvalidClick","handleClick","x","y","clickedAdjSqrsCp","slice","gridCp","hasShipJustSunk","hasEnemyAttackEnded","get","every","val","clickedSqrs","length","push","some","placeShipOnBoard","onShipPlacement","onShipHasSunk","onEnemyEndOfTurn","renderSquare","marker","showShipMarker","aRow","rowIndex","renderGrid","Player","name","showShipOnBoard","onPlayerHasLost","onPlayerShipPlacement","PLAYER_ONE_NAME","PLAYER_TWO_NAME","Game","whoWon","setWhoWon","whoseTurn","setWhoseTurn","shipsOnBoard","setShipsOnBoard","handleEnemyEndOfTurn","playerName","handlePlayerHasLost","handlePlayerShipPlacement","shipsOnBoardCopy","renderAPlayer","hideBoard","unclickableBoard","renderGameInfo","info","onWin","window","location","reload","shipsOnBoardValues","values","gameParts","opponent","renderGame","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e01cfe90.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nfunction Square (props) {\n\treturn (\n\t\t<button\n\t\t\tclassName={props.customStyle}\n\t\t\tdata-testid={props.testId}\n\t\t\tonClick={props.onClick}\n\t\t/>\n\t)\n}\n\nSquare.propTypes = {\n\tonClick: PropTypes.func.isRequired,\n\tcustomStyle: PropTypes.string,\n\ttestId: PropTypes.string.isRequired\n}\n\nSquare.defaultProps = {\n\tcustomStyle: ''\n}\n\nexport default Square\n","import React, { useState } from 'react'\nimport Square from './Square'\nimport PropTypes from 'prop-types'\n\nconst BOARD_SIZE = 10\nconst BOARD_A_CHAR_CODE = 'A'.charCodeAt()\nconst SHIP_SIZE = 3\nconst MARKER_TYPE_EMPTY = 'none'\nconst MARKER_TYPE_SHIP = 'ship'\nconst MARKER_TYPE_HIT = 'hit'\nconst MARKER_TYPE_MISS = 'miss'\nconst ROW_RANGE = Array.from(Array(BOARD_SIZE + 1).keys()).splice(1)\nconst COLUMN_RANGE = Array.from(Array(BOARD_SIZE).keys())\n\t.map(elem => String.fromCharCode(elem + BOARD_A_CHAR_CODE))\n\nfunction Board (props) {\n\tconst [grid, setGrid] = useState(initGrid())\n\tconst [clickedAdjSquares, setClickedAdjSquares] = useState([])\n\tconst [hasShipPlaced, setHasShipPlaced] = useState(false)\n\tconst [hasShipSunk, setHasShipSunk] = useState(false)\n\tconst [invalidClick, setInvalidClick] = useState(false)\n\n\tfunction initGrid () {\n\t\tconst grid = new Map()\n\n\t\tROW_RANGE.forEach(row => {\n\t\t\tCOLUMN_RANGE.forEach(col => {\n\t\t\t\tgrid.set(col + row, MARKER_TYPE_EMPTY)\n\t\t\t})\n\t\t})\n\n\t\treturn grid\n\t}\n\n\tfunction handleClick (x, y) {\n\t\tconst clickedAdjSqrsCp = clickedAdjSquares.slice()\n\t\tconst gridCp = new Map(grid)\n\t\tlet hasShipJustSunk = hasShipSunk\n\t\tlet hasEnemyAttackEnded = false\n\n\t\tif (hasShipSunk) return\n\n\t\tif (!hasShipPlaced) {\n\t\t\tplaceShipOnBoard(clickedAdjSqrsCp, x, y, gridCp)\n\t\t} else {\n\t\t\tif (gridCp.get(x + y) === MARKER_TYPE_SHIP) {\n\t\t\t\tgridCp.set(x + y, MARKER_TYPE_HIT)\n\t\t\t\thasShipJustSunk = clickedAdjSqrsCp.every(val => gridCp.get(val.x + val.y) === MARKER_TYPE_HIT)\n\t\t\t\thasEnemyAttackEnded = true\n\t\t\t\tsetInvalidClick(false)\n\t\t\t} else if (gridCp.get(x + y) === MARKER_TYPE_EMPTY) {\n\t\t\t\tgridCp.set(x + y, MARKER_TYPE_MISS)\n\t\t\t\thasEnemyAttackEnded = true\n\t\t\t\tsetInvalidClick(false)\n\t\t\t} else {\n\t\t\t\tsetInvalidClick(true)\n\t\t\t}\n\t\t}\n\n\t\tif (!hasShipPlaced && clickedAdjSqrsCp.length === SHIP_SIZE) {\n\t\t\tsetHasShipPlaced(true)\n\t\t\tprops.onShipPlacement()\n\t\t}\n\n\t\tif (hasShipJustSunk) {\n\t\t\tsetHasShipSunk(hasShipJustSunk)\n\t\t\tprops.onShipHasSunk()\n\t\t}\n\n\t\tif (hasEnemyAttackEnded) props.onEnemyEndOfTurn()\n\n\t\tsetGrid(gridCp)\n\t\tsetClickedAdjSquares(clickedAdjSqrsCp)\n\t}\n\n\tfunction placeShipOnBoard (clickedSqrs, x, y, grid) {\n\t\tif (clickedSqrs.length === 0) {\n\t\t\tclickedSqrs.push({ x, y })\n\t\t\tgrid.set(x + y, MARKER_TYPE_SHIP)\n\t\t\tsetInvalidClick(false)\n\t\t\treturn\n\t\t}\n\n\t\tif (clickedSqrs.length < SHIP_SIZE && !clickedSqrs.some(val => val.x === x && val.y === y)) {\n\t\t\tif (clickedSqrs.every(val => val.y === y) &&\n\t\t\tclickedSqrs.some(val => val.x.charCodeAt() - x.charCodeAt() === 1 ||\n\t\t\tval.x.charCodeAt() - x.charCodeAt() === -1)) {\n\t\t\t\tclickedSqrs.push({ x: x, y: y })\n\t\t\t\tgrid.set(x + y, MARKER_TYPE_SHIP)\n\t\t\t\tsetInvalidClick(false)\n\t\t\t} else if (clickedSqrs.every(val => val.x === x) &&\n\t\t\t\tclickedSqrs.some(val => val.y - y === 1 || val.y - y === -1)) {\n\t\t\t\tclickedSqrs.push({ x: x, y: y })\n\t\t\t\tgrid.set(x + y, MARKER_TYPE_SHIP)\n\t\t\t\tsetInvalidClick(false)\n\t\t\t} else {\n\t\t\t\tsetInvalidClick(true)\n\t\t\t}\n\t\t} else {\n\t\t\tsetInvalidClick(true)\n\t\t}\n\t}\n\n\tfunction renderSquare (x, y) {\n\t\tconst marker = grid.get(x + y)\n\n\t\tif (!props.showShipMarker && marker === MARKER_TYPE_SHIP) {\n\t\t\treturn (\n\t\t\t\t<Square\n\t\t\t\t\tkey={x + y}\n\t\t\t\t\ttestId={x + y}\n\t\t\t\t\tcustomStyle={''}\n\t\t\t\t\tonClick={() => handleClick(x, y)}\n\t\t\t\t/>\n\t\t\t)\n\t\t}\n\n\t\treturn (\n\t\t\t<Square\n\t\t\t\tkey={x + y}\n\t\t\t\ttestId={x + y}\n\t\t\t\tcustomStyle={marker}\n\t\t\t\tonClick={() => handleClick(x, y)}\n\t\t\t/>\n\t\t)\n\t}\n\n\tfunction renderGrid () {\n\t\tconst grid = []\n\t\tlet aRow = []\n\n\t\tROW_RANGE.forEach((row, rowIndex) => {\n\t\t\taRow = []\n\t\t\tCOLUMN_RANGE.forEach(col => {\n\t\t\t\taRow.push(renderSquare(col, row))\n\t\t\t})\n\t\t\tgrid.push(\n\t\t\t\t<div key={rowIndex} className=\"grid-row\">\n\t\t\t\t\t{aRow}\n\t\t\t\t</div>\n\t\t\t)\n\t\t})\n\n\t\treturn grid\n\t}\n\n\treturn (\n\t\t<div className=\"board\">\n\t\t\t<div className=\"column-label\">\n\t\t\t\t{COLUMN_RANGE.map(elem => (\n\t\t\t\t\t<div key={elem}>{elem}</div>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<div className={invalidClick ? 'grid invalid-click' : 'grid'}>\n\t\t\t\t\t{renderGrid()}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"row-label\">\n\t\t\t\t\t{ROW_RANGE.map(elem => (\n\t\t\t\t\t\t<div key={elem}>{elem}</div>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nBoard.propTypes = {\n\tshowShipMarker: PropTypes.bool.isRequired,\n\tonShipHasSunk: PropTypes.func.isRequired,\n\tonEnemyEndOfTurn: PropTypes.func.isRequired,\n\tonShipPlacement: PropTypes.func.isRequired\n}\n\nexport default Board\n","import React from 'react'\nimport Board from './Board'\nimport PropTypes from 'prop-types'\n\nfunction Player (props) {\n\tfunction handleShipHasSunk () {\n\t\tprops.onPlayerHasLost(props.name)\n\t}\n\n\tfunction handleEnemyEndOfTurn () {\n\t\tprops.onEnemyEndOfTurn(props.name)\n\t}\n\n\tfunction handleShipPlacement () {\n\t\tprops.onPlayerShipPlacement(props.name)\n\t}\n\n\treturn (\n\t\t<div className={`split-child-container ${props.customStyle}`}>\n\t\t\t<h3 className=\"text-center\">{props.name}</h3>\n\t\t\t<Board\n\t\t\t\tshowShipMarker={props.showShipOnBoard}\n\t\t\t\tonShipHasSunk={handleShipHasSunk}\n\t\t\t\tonEnemyEndOfTurn={handleEnemyEndOfTurn}\n\t\t\t\tonShipPlacement={handleShipPlacement}\n\t\t\t/>\n\t\t</div>\n\t)\n}\n\nPlayer.propTypes = {\n\tname: PropTypes.string.isRequired,\n\tcustomStyle: PropTypes.string,\n\tshowShipOnBoard: PropTypes.bool.isRequired,\n\tonPlayerHasLost: PropTypes.func.isRequired,\n\tonEnemyEndOfTurn: PropTypes.func.isRequired,\n\tonPlayerShipPlacement: PropTypes.func.isRequired\n}\n\nPlayer.defaultProps = {\n\tcustomStyle: ''\n}\n\nexport default Player\n","import React, { useState } from 'react'\nimport Player from './Player'\n\nconst PLAYER_ONE_NAME = 'Player 1'\nconst PLAYER_TWO_NAME = 'Player 2'\n\nfunction Game () {\n\tconst [whoWon, setWhoWon] = useState('')\n\tconst [whoseTurn, setWhoseTurn] = useState(PLAYER_ONE_NAME)\n\tconst [shipsOnBoard, setShipsOnBoard] = useState(\n\t\tnew Map([\n\t\t\t[PLAYER_ONE_NAME, false],\n\t\t\t[PLAYER_TWO_NAME, false]\n\t\t])\n\t)\n\n\tfunction handleEnemyEndOfTurn (playerName) {\n\t\tsetWhoseTurn(playerName)\n\t}\n\n\tfunction handlePlayerHasLost (playerName) {\n\t\tconst winner = playerName === PLAYER_ONE_NAME ? PLAYER_TWO_NAME : PLAYER_ONE_NAME\n\n\t\tsetWhoWon(winner)\n\t}\n\n\tfunction handlePlayerShipPlacement (playerName) {\n\t\tconst whoseTurn = playerName === PLAYER_ONE_NAME ? PLAYER_TWO_NAME : PLAYER_ONE_NAME\n\t\tconst shipsOnBoardCopy = new Map(shipsOnBoard)\n\n\t\tshipsOnBoardCopy.set(playerName, true)\n\t\tsetWhoseTurn(whoseTurn)\n\t\tsetShipsOnBoard(shipsOnBoardCopy)\n\t}\n\n\tfunction renderAPlayer (name, hideBoard, showShipOnBoard, unclickableBoard = false) {\n\t\tlet customStyle = hideBoard ? 'hide-board' : ''\n\t\tcustomStyle = unclickableBoard ? `${customStyle} unclickable-board` : customStyle\n\n\t\treturn (\n\t\t\t<Player\n\t\t\t\tkey={name}\n\t\t\t\tname={name}\n\t\t\t\tcustomStyle={customStyle}\n\t\t\t\tshowShipOnBoard={showShipOnBoard}\n\t\t\t\tonPlayerHasLost={handlePlayerHasLost}\n\t\t\t\tonEnemyEndOfTurn={handleEnemyEndOfTurn}\n\t\t\t\tonPlayerShipPlacement={handlePlayerShipPlacement}\n\t\t\t/>\n\t\t)\n\t}\n\n\tfunction renderGameInfo (info, onWin = false) {\n\t\tif (!onWin) {\n\t\t\treturn (\n\t\t\t\t<div key=\"info\" className=\"split-child-container\">\n\t\t\t\t\t<p className=\"text-center\">{info}</p>\n\t\t\t\t</div>\n\t\t\t)\n\t\t}\n\n\t\treturn (\n\t\t\t<div key=\"info\" className=\"split-child-container\">\n\t\t\t\t<p className=\"text-center\">{info}</p>\n\t\t\t\t<button className=\"reset-button\" onClick={() => window.location.reload()}>\n\t\t\t\t\tPlay again!\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t)\n\t}\n\n\tfunction renderGame () {\n\t\tconst shipsOnBoardValues = [...shipsOnBoard.values()]\n\t\tconst gameParts = new Array(3)\n\n\t\tif (!whoWon) {\n\t\t\tif (shipsOnBoardValues.every((val) => val === true)) {\n\t\t\t\tif (whoseTurn === PLAYER_ONE_NAME) {\n\t\t\t\t\tgameParts.push(renderAPlayer(PLAYER_ONE_NAME, true, false))\n\t\t\t\t\tgameParts.push(renderGameInfo(`${PLAYER_ONE_NAME} attack ${PLAYER_TWO_NAME} by clicking any square.`))\n\t\t\t\t\tgameParts.push(renderAPlayer(PLAYER_TWO_NAME, false, false))\n\t\t\t\t} else {\n\t\t\t\t\tgameParts.push(renderAPlayer(PLAYER_ONE_NAME, false, false))\n\t\t\t\t\tgameParts.push(renderGameInfo(`${PLAYER_TWO_NAME} attack ${PLAYER_ONE_NAME} by clicking any square.`))\n\t\t\t\t\tgameParts.push(renderAPlayer(PLAYER_TWO_NAME, true, false))\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (whoseTurn === PLAYER_ONE_NAME) {\n\t\t\t\t\tgameParts.push(renderAPlayer(PLAYER_ONE_NAME, false, true))\n\t\t\t\t\tgameParts.push(renderGameInfo(`${PLAYER_ONE_NAME} place your ship on board by clicking 3 adjacent squares horizontally or vertically.`))\n\t\t\t\t\tgameParts.push(renderAPlayer(PLAYER_TWO_NAME, true, true))\n\t\t\t\t} else {\n\t\t\t\t\tgameParts.push(renderAPlayer(PLAYER_ONE_NAME, true, true))\n\t\t\t\t\tgameParts.push(renderGameInfo(`${PLAYER_TWO_NAME} place your ship on board by clicking 3 adjacent squares horizontally or vertically.`))\n\t\t\t\t\tgameParts.push(renderAPlayer(PLAYER_TWO_NAME, false, true))\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tgameParts.push(renderAPlayer(PLAYER_ONE_NAME, false, true, true))\n\t\t\tconst opponent = whoWon === PLAYER_ONE_NAME ? PLAYER_TWO_NAME : PLAYER_ONE_NAME\n\t\t\tgameParts.push(renderGameInfo(`Congratulations ${whoWon}!! You sunk your ${opponent}'s ship.`, true))\n\t\t\tgameParts.push(renderAPlayer(PLAYER_TWO_NAME, false, true, true))\n\t\t}\n\n\t\treturn gameParts\n\t}\n\n\treturn <div className=\"split\">{renderGame()}</div>\n}\n\nexport default Game\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport Game from './Game'\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Game />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n)\n"],"sourceRoot":""}
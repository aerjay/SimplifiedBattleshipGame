{"version":3,"sources":["Square.js","Board.js","Game.js","index.js"],"names":["Square","props","className","data-testid","testId","onClick","defaultProps","BOARD_A_CHAR_CODE","charCodeAt","MARKER_TYPE_EMPTY","MARKER_TYPE_SHIP","MARKER_TYPE_HIT","MARKER_TYPE_MISS","ROW_RANGE","Array","from","BOARD_SIZE","keys","splice","COLUMN_RANGE","map","elem","String","fromCharCode","Board","onClickSquare","onShipHasSunk","onPlaceShip","showShip","formatGridSquareName","col","row","setGridSquare","g","value","set","getGridSquare","get","useState","grid","Map","forEach","initGrid","setGrid","shipLocation","setShipLocation","isShipPlaced","setIsShipPlaced","placeShip","ship","placedShipSquares","length","push","canPlace","some","val","isPlacedHorizontally","every","isPlacedVertically","placeShipSquareOnBoard","handleClickSquare","shipLocationCopy","gridCopy","hasShipJustSunk","hasAttacked","attackShip","renderSquare","marker","squareClassName","aRow","rowIndex","renderGrid","PLAYER_ONE_NAME","PLAYER_TWO_NAME","Game","winner","setWinner","currentPlayer","setCurrentPlayer","currentBoardToShow","setCurrentBoardToShow","shipsOnBoard","setShipsOnBoard","opponent","isBoardReady","values","handleEndOfTurn","handlePlayerHasLost","handlePlacePlayerShip","shipsOnBoardCopy","renderPlayerBoard","playerName","boardContainerClassName","includes","playerColorClassName","info","window","location","reload","renderGameInfo","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a36d2ebf.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nfunction Square (props) {\n\treturn (\n\t\t<button\n\t\t\tclassName={props.className}\n\t\t\tdata-testid={props.testId}\n\t\t\tonClick={props.onClick}\n\t\t/>\n\t)\n}\n\nSquare.propTypes = {\n\tonClick: PropTypes.func.isRequired,\n\tclassName: PropTypes.string,\n\ttestId: PropTypes.string.isRequired\n}\n\nSquare.defaultProps = {\n\tclassName: ''\n}\n\nexport default Square\n","import React, { useState } from 'react'\nimport Square from './Square'\nimport PropTypes from 'prop-types'\n\nconst BOARD_SIZE = 10\nconst BOARD_A_CHAR_CODE = 'A'.charCodeAt()\nconst SHIP_SIZE = 3\nconst MARKER_TYPE_EMPTY = 'none'\nconst MARKER_TYPE_SHIP = 'ship'\nconst MARKER_TYPE_HIT = 'hit'\nconst MARKER_TYPE_MISS = 'miss'\nconst ROW_RANGE = Array.from(Array(BOARD_SIZE + 1).keys()).splice(1)\nconst COLUMN_RANGE = Array.from(Array(BOARD_SIZE).keys()).map((elem) =>\n\tString.fromCharCode(elem + BOARD_A_CHAR_CODE)\n)\n\nfunction Board ({ onClickSquare, onShipHasSunk, onPlaceShip, showShip }) {\n\tfunction formatGridSquareName (col, row) {\n\t\treturn `${col}${row}`\n\t}\n\n\tfunction setGridSquare (g, col, row, value) {\n\t\tg.set(formatGridSquareName(col, row), value)\n\t}\n\n\tfunction getGridSquare (g, col, row) {\n\t\treturn g.get(formatGridSquareName(col, row))\n\t}\n\n\tfunction initGrid () {\n\t\tconst grid = new Map()\n\n\t\tROW_RANGE.forEach((row) =>\n\t\t\tCOLUMN_RANGE.forEach((col) =>\n\t\t\t\tsetGridSquare(grid, col, row, MARKER_TYPE_EMPTY)\n\t\t\t)\n\t\t)\n\n\t\treturn grid\n\t}\n\n\tconst [grid, setGrid] = useState(initGrid())\n\tconst [shipLocation, setShipLocation] = useState([])\n\tconst [isShipPlaced, setIsShipPlaced] = useState(false)\n\n\tfunction placeShipSquareOnBoard (placedShipSquares, grid, col, row) {\n\t\tif (placedShipSquares.length === 0) {\n\t\t\tplacedShipSquares.push({ col, row })\n\t\t\tsetGridSquare(grid, col, row, MARKER_TYPE_SHIP)\n\t\t\treturn\n\t\t}\n\n\t\tconst canPlace =\n\t\t\tplacedShipSquares.length < SHIP_SIZE &&\n\t\t\t!placedShipSquares.some((val) => val.row === row && val.col === col)\n\n\t\tconst isPlacedHorizontally =\n\t\t\tplacedShipSquares.every((val) => val.row === row) &&\n\t\t\tplacedShipSquares.some(\n\t\t\t\t(val) =>\n\t\t\t\t\tval.col.charCodeAt() - col.charCodeAt() === 1 ||\n\t\t\t\t\tval.col.charCodeAt() - col.charCodeAt() === -1\n\t\t\t)\n\n\t\tconst isPlacedVertically =\n\t\t\tplacedShipSquares.every((val) => val.col === col) &&\n\t\t\tplacedShipSquares.some(\n\t\t\t\t(val) => val.row - row === 1 || val.row - row === -1\n\t\t\t)\n\n\t\tif (canPlace && (isPlacedVertically || isPlacedHorizontally)) {\n\t\t\tplacedShipSquares.push({ col, row })\n\t\t\tsetGridSquare(grid, col, row, MARKER_TYPE_SHIP)\n\t\t}\n\t}\n\n\tfunction placeShip (ship, g, col, row) {\n\t\tplaceShipSquareOnBoard(ship, g, col, row)\n\n\t\tif (ship.length === SHIP_SIZE) {\n\t\t\tsetIsShipPlaced(true)\n\t\t\tonPlaceShip()\n\t\t}\n\n\t\tsetShipLocation(ship)\n\t}\n\n\tfunction attackShip (ship, g, col, row) {\n\t\tlet hasShipJustSunk = false\n\t\tlet hasAttacked = false\n\n\t\tif (getGridSquare(g, col, row) === MARKER_TYPE_SHIP) {\n\t\t\thasAttacked = true\n\t\t\tsetGridSquare(g, col, row, MARKER_TYPE_HIT)\n\t\t\thasShipJustSunk = ship.every(\n\t\t\t\t(val) => getGridSquare(g, val.col, val.row) === MARKER_TYPE_HIT\n\t\t\t)\n\t\t} else if (getGridSquare(g, col, row) === MARKER_TYPE_EMPTY) {\n\t\t\thasAttacked = true\n\t\t\tsetGridSquare(g, col, row, MARKER_TYPE_MISS)\n\t\t}\n\n\t\tif (hasAttacked && !hasShipJustSunk) {\n\t\t\tonClickSquare()\n\t\t}\n\n\t\tif (hasShipJustSunk) {\n\t\t\tonShipHasSunk()\n\t\t}\n\t}\n\n\tfunction handleClickSquare (col, row) {\n\t\tconst shipLocationCopy = [...shipLocation]\n\t\tconst gridCopy = new Map(grid)\n\n\t\tif (!isShipPlaced) {\n\t\t\tplaceShip(shipLocationCopy, gridCopy, col, row)\n\t\t} else {\n\t\t\tattackShip(shipLocationCopy, gridCopy, col, row)\n\t\t}\n\n\t\tsetGrid(gridCopy)\n\t}\n\n\tfunction renderSquare (col, row) {\n\t\tconst marker = getGridSquare(grid, col, row)\n\t\tlet squareClassName =\n\t\t\t!showShip && marker === MARKER_TYPE_SHIP ? '' : marker\n\t\tsquareClassName =\n\t\t\tmarker === MARKER_TYPE_HIT || marker === MARKER_TYPE_MISS\n\t\t\t\t? `${squareClassName} unclickable`\n\t\t\t\t: squareClassName\n\n\t\treturn (\n\t\t\t<Square\n\t\t\t\tkey={formatGridSquareName(col, row)}\n\t\t\t\ttestId={formatGridSquareName(col, row)}\n\t\t\t\tclassName={squareClassName}\n\t\t\t\tonClick={() => handleClickSquare(col, row)}\n\t\t\t/>\n\t\t)\n\t}\n\n\tfunction renderGrid () {\n\t\tconst grid = []\n\t\tlet aRow = []\n\n\t\tROW_RANGE.forEach((row, rowIndex) => {\n\t\t\taRow = []\n\t\t\tCOLUMN_RANGE.forEach((col) => {\n\t\t\t\taRow.push(renderSquare(col, row))\n\t\t\t})\n\t\t\tgrid.push(\n\t\t\t\t<div key={rowIndex} className=\"grid-row\">\n\t\t\t\t\t{aRow}\n\t\t\t\t</div>\n\t\t\t)\n\t\t})\n\n\t\treturn grid\n\t}\n\n\treturn (\n\t\t<div className=\"board\">\n\t\t\t<div className=\"column-label\">\n\t\t\t\t{COLUMN_RANGE.map((elem) => (\n\t\t\t\t\t<div key={elem}>{elem}</div>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<div className=\"grid\">{renderGrid()}</div>\n\t\t\t\t<div className=\"row-label\">\n\t\t\t\t\t{ROW_RANGE.map((elem) => (\n\t\t\t\t\t\t<div key={elem}>{elem}</div>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nBoard.propTypes = {\n\tshowShip: PropTypes.bool.isRequired,\n\tonShipHasSunk: PropTypes.func.isRequired,\n\tonClickSquare: PropTypes.func.isRequired,\n\tonPlaceShip: PropTypes.func.isRequired\n}\n\nexport default Board\n","import React, { useState } from 'react'\nimport Board from './Board'\n\nconst PLAYER_ONE_NAME = 'Player 1'\nconst PLAYER_TWO_NAME = 'Player 2'\n\nfunction Game () {\n\tconst [winner, setWinner] = useState('')\n\tconst [currentPlayer, setCurrentPlayer] = useState(PLAYER_ONE_NAME)\n\tconst [currentBoardToShow, setCurrentBoardToShow] = useState(PLAYER_ONE_NAME)\n\tconst [shipsOnBoard, setShipsOnBoard] = useState(\n\t\tnew Map([\n\t\t\t[PLAYER_ONE_NAME, false],\n\t\t\t[PLAYER_TWO_NAME, false]\n\t\t])\n\t)\n\n\tconst opponent =\n\t\tcurrentPlayer === PLAYER_ONE_NAME ? PLAYER_TWO_NAME : PLAYER_ONE_NAME\n\tconst isBoardReady = [...shipsOnBoard.values()].every((val) => val === true)\n\n\tfunction handleEndOfTurn () {\n\t\tsetCurrentBoardToShow(currentPlayer)\n\t\tsetCurrentPlayer(opponent)\n\t}\n\n\tfunction handlePlayerHasLost () {\n\t\tsetWinner(currentPlayer)\n\t\tsetCurrentBoardToShow(`${currentPlayer} ${opponent}`)\n\t}\n\n\tfunction handlePlacePlayerShip () {\n\t\tconst shipsOnBoardCopy = new Map(shipsOnBoard)\n\t\tshipsOnBoardCopy.set(currentPlayer, true)\n\t\tconst isBoardReady = [...shipsOnBoardCopy.values()].every(\n\t\t\t(val) => val === true\n\t\t)\n\n\t\tisBoardReady\n\t\t\t? setCurrentBoardToShow(currentPlayer)\n\t\t\t: setCurrentBoardToShow(opponent)\n\t\tsetCurrentPlayer(opponent)\n\t\tsetShipsOnBoard(shipsOnBoardCopy)\n\t}\n\n\tfunction renderGameInfo () {\n\t\tconst playerColorClassName =\n\t\t\tcurrentPlayer === PLAYER_ONE_NAME ? 'orange' : 'purple'\n\t\tlet info = ''\n\t\tif (winner) {\n\t\t\tinfo = `Congratulations ${winner}!! You sunk ${opponent}'s ship.`\n\t\t} else if (isBoardReady) {\n\t\t\tinfo = `Attack ${opponent} by clicking any square.`\n\t\t} else {\n\t\t\tinfo =\n\t\t\t\t'Place your ship on board by clicking 3 adjacent squares horizontally or vertically.'\n\t\t}\n\n\t\treturn (\n\t\t\t<div className=\"game-info\">\n\t\t\t\t{!winner && (\n\t\t\t\t\t<h4\n\t\t\t\t\t\tclassName={`text-center ${playerColorClassName}`}\n\t\t\t\t\t>{`${currentPlayer}'s Turn`}</h4>\n\t\t\t\t)}\n\t\t\t\t<p className=\"text-center\">{info}</p>\n\t\t\t\t{winner && (\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"reset-button\"\n\t\t\t\t\t\tonClick={() => window.location.reload()}\n\t\t\t\t\t>\n\t\t\t\t\t\tPlay again!\n\t\t\t\t\t</button>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t)\n\t}\n\n\tfunction renderPlayerBoard (playerName) {\n\t\tlet boardContainerClassName = currentBoardToShow.includes(playerName)\n\t\t\t? ''\n\t\t\t: 'hidden'\n\t\tboardContainerClassName = winner\n\t\t\t? `${boardContainerClassName} unclickable`\n\t\t\t: boardContainerClassName\n\n\t\treturn (\n\t\t\t<div className={boardContainerClassName}>\n\t\t\t\t<h3 className=\"text-center\">{`${playerName}'s Board`}</h3>\n\t\t\t\t<Board\n\t\t\t\t\tshowShip={!!winner || !isBoardReady}\n\t\t\t\t\tonShipHasSunk={handlePlayerHasLost}\n\t\t\t\t\tonClickSquare={handleEndOfTurn}\n\t\t\t\t\tonPlaceShip={handlePlacePlayerShip}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t)\n\t}\n\n\treturn (\n\t\t<div className=\"split\">\n\t\t\t<div className=\"split-child-container\">\n\t\t\t\t{renderGameInfo()}\n\t\t\t\t{renderPlayerBoard(PLAYER_ONE_NAME)}\n\t\t\t\t{renderPlayerBoard(PLAYER_TWO_NAME)}\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default Game\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport Game from './Game'\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Game />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n)\n"],"sourceRoot":""}